CREATE TABLE role (
    roleId VARCHAR(255) PRIMARY KEY,
    name VARCHAR(255)
);

CREATE TABLE accounts (
    accountId VARCHAR(255) PRIMARY KEY,
    username VARCHAR(255),
    email VARCHAR(255),
    password VARCHAR(255) NOT NULL,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    birthday DATETIME,
    bio TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    private_status VARCHAR(255),
    avatar LONGTEXT,
    roleId VARCHAR(255),
    FOREIGN KEY (roleId) REFERENCES role(roleId)
);

CREATE TABLE posts (
    postId VARCHAR(255) PRIMARY KEY,
    accountId VARCHAR(255),
    content TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (accountId) REFERENCES accounts(accountId)
);

CREATE TABLE thumnail (
    postId VARCHAR(255),
    media TEXT,
    FOREIGN KEY (postId) REFERENCES posts(postId)
);

CREATE TABLE comments (
    commentId VARCHAR(255) PRIMARY KEY,
    postId VARCHAR(255),
    accountId VARCHAR(255),
    content TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (postId) REFERENCES posts(postId),
    FOREIGN KEY (accountId) REFERENCES accounts(accountId)
);

CREATE TABLE likes (
    likeId VARCHAR(255) PRIMARY KEY,
    postId VARCHAR(255),
    accountId VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (postId) REFERENCES posts(postId),
    FOREIGN KEY (accountId) REFERENCES accounts(accountId)
);

CREATE TABLE friends (
    friendshipId VARCHAR(255) PRIMARY KEY,
    accountId VARCHAR(255),
    friendId VARCHAR(255),
    status ENUM('pending', 'accepted', 'blocked') DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (accountId) REFERENCES accounts(accountId),
    FOREIGN KEY (friendId) REFERENCES accounts(accountId)
);

CREATE TABLE messages (
    messageId VARCHAR(255) PRIMARY KEY,
    senderId VARCHAR(255),
    receiverId VARCHAR(255),
    content TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (senderId) REFERENCES accounts(accountId),
    FOREIGN KEY (receiverId) REFERENCES accounts(accountId)
);

CREATE TABLE notifications (
    notificationId VARCHAR(255) PRIMARY KEY,
    accountId VARCHAR(255),
    type ENUM('like', 'comment', 'friend_request') NOT NULL,
    sourceId INT NOT NULL,
    content TEXT,
    `read` BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (accountId) REFERENCES accounts(accountId)
);

CREATE TABLE shares (
    shareId VARCHAR(255) PRIMARY KEY,
    postId VARCHAR(255),
    accountId VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (postId) REFERENCES posts(postId),
    FOREIGN KEY (accountId) REFERENCES accounts(accountId)
);

CREATE TABLE `groups` (
    groupId VARCHAR(255) PRIMARY KEY,
    group_name VARCHAR(255) NOT NULL,
    description TEXT,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES accounts(accountId)
);

CREATE TABLE `group_members` (
    group_memberId VARCHAR(255) PRIMARY KEY,
    groupId VARCHAR(255),
    accountId VARCHAR(255),
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (groupId) REFERENCES `groups`(groupId),
    FOREIGN KEY (accountId) REFERENCES accounts(accountId)
);


CREATE TABLE tagged (
    tagId VARCHAR(255) PRIMARY KEY,
    postId VARCHAR(255),
    accountId VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (postId) REFERENCES posts(postId),
    FOREIGN KEY (accountId) REFERENCES accounts(accountId)
);

CREATE TABLE save (
    saveId VARCHAR(255) PRIMARY KEY,
    postId VARCHAR(255),
    accountId VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (postId) REFERENCES posts(postId),
    FOREIGN KEY (accountId) REFERENCES accounts(accountId)
);